name: CI solamente 

on: 
  push: 
    branches: [ master ] 
  workflow_dispatch: 
 
jobs: 
  build: 
    runs-on: ubuntu-latest 
    permissions: 
      contents: write 
      packages: write 
 
    steps: 
      - name: Checkout repository 
        uses: actions/checkout@v4 #descarga el repositorio en el ejecutor 
 
      - name: Set up JDK 8 
        uses: actions/setup-java@v4  
        with: 
            java-version: '8' 
            distribution: 'adopt' 
            server-id: github  
            settings-path: ${{ github.workspace }} # location for the settings.xml file 
           
      #### BUILDS ###### 
      - uses: gradle/actions/setup-gradle@v3 
        with: 
          gradle-version: 2.1  
                
      - name: build del Front 
        working-directory: src/Clients 
        run: ./gradlew build  
      - uses: actions/upload-artifact@v4 #guardar en Artifacts de la AcciÃ³n el resultado del build. No hace falta, es por curiosidad. 
        with: 
           name: Clients 
           path: src/Clients/build/libs 
     
      - name: build del Back 
        working-directory: src/Backend/OrderService 
        run: ./gradlew build test

      - name: dockerizar el front y el backend 
        run: |  
            cp src/Clients/build/libs/*.war deploy/docker/Clients/drop #copiar el resultado del build para la nueva imagen 
            docker build -t p2gps/web deploy/docker/Clients 
            cp src/Backend/OrderService/build/libs/ordering* deploy/docker/Order/drop #copiar el resultado del build para la nueva imagen 
            docker build -t p2gps/order deploy/docker/Order 
             
      ### SUBIR IMAGENES A DOCKERHUB ##### 
      - name: Login to DockerHub 
        uses: docker/login-action@v3  
        with: 
          username: ${{ secrets.DOCKERHUB_USERNAME }} # crear los secretos en Settings --> Secrets/Actions/New Repository Secret 
          password: ${{ secrets.DOCKERHUB_PASSWORD }}  
      - name: Etiquetar con formato DockerHub 
        run: | 
          docker tag p2gps/web ${{ secrets.DOCKERHUB_USERNAME }}/p2gps:web 
          docker tag p2gps/order ${{ secrets.DOCKERHUB_USERNAME }}/p2gps:order 
      - name: Push a DockerHub 
        run: | 
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/p2gps:order 
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/p2gps:web  
